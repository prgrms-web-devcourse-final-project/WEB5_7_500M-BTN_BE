spring:
  config:
    import: optional:file:.env[.yml]

  jackson:
    time-zone: Asia/Seoul

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: ${DDL_AUTO}   # create-drop, create, none, validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    generate-ddl: true

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      timeout: ${REDIS_TIMEOUT}
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_PW}
            redirect-uri: http://localhost:${SERVER_PORT}/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope:
              - email
          kakao:
            client-name: Kakao
            client-id: ${KAKAO_CLIENT_ID}
            redirect-uri: http://localhost:${SERVER_PORT}/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - account_email
          naver:
            client-name: naver
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_PW}
            redirect-uri: http://localhost:${SERVER_PORT}/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope:
              - email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize
            token_uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user_name_attribute: response

custom:
  cors:
    allowed-origin: ${FRONT_BASE_URL}
  jwt:
    redirection:
      base: ${JWT_REDIRECT_BASE}
    token-validity-time: # 초 단위
      access: ${ACCESS_TOKEN_TTL} # 10분
      refresh: ${REFRESH_TOKEN_TTL} # 7일
    secret: ${JWT_SECRET}
    redirect-login-success: ${custom.cors.allowed-origin}/auth/callback

toss:
  secret-key: ${TOSS_SECRET_KEY}
  client-key: ${TOSS_CLIENT_KEY}

logging:
  level:
    root: INFO

server:
  port: ${SERVER_PORT}
